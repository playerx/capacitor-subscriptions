{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAC7C,4BAA4B,CAAC,OAAsD;QACjF,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,iBAAiB,CAAC,OAAsC;QAC5D,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAA;IACH,CAAC;IACD,KAAK,CAAC,eAAe,CAAC,OAAuD;QAC3E,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAA;IACH,CAAC;IACD,KAAK,CAAC,sBAAsB;QAC1B,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAA;IACH,CAAC;IACD,KAAK,CAAC,oBAAoB,CAAC,OAAoC;QAC7D,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAA;IACH,CAAC;IACD,mBAAmB;IAEnB,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { SubscriptionsPlugin, ProductDetailsResponse, PurchaseProductResponse, CurrentEntitlementsResponse, LatestTransactionResponse } from './definitions';\n\nexport class SubscriptionsWeb extends WebPlugin implements SubscriptionsPlugin {\n  setGoogleVerificationDetails(options: { googleVerifyEndpoint: string, bid: string }): void {\n    console.info(options);\n  }\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    return options;\n  }\n  async getProductDetails(options: { productIdentifier: string }): Promise< ProductDetailsResponse > {\n    console.info(options);\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    }\n  }\n  async purchaseProduct(options: { productIdentifier: string, userId?: string }): Promise< PurchaseProductResponse > {\n    console.info(options);\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    }\n  }\n  async getCurrentEntitlements(): Promise< CurrentEntitlementsResponse > {\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    }\n  }\n  async getLatestTransaction(options: {productIdentifier: string}): Promise< LatestTransactionResponse > {\n    console.info(options);\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    }\n  }\n  manageSubscriptions(): void {\n\n  }\n}\n"]}